// <auto-generated />
using System;
using AjudaFacil.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AjudaFacil.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220927121243_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AjudaFacil.Models.ClothingDonation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DescriptionOfClothes")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("VARCHAR(300)")
                        .HasColumnName("DescriptionOfClothes");

                    b.Property<int>("DonationId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantityOfClothes")
                        .HasColumnType("INT")
                        .HasColumnName("QuantityOfClothes");

                    b.Property<int>("Weight")
                        .HasColumnType("INT")
                        .HasColumnName("Weight");

                    b.HasKey("Id");

                    b.HasIndex("DonationId");

                    b.ToTable("ClothingDonation", (string)null);
                });

            modelBuilder.Entity("AjudaFacil.Models.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Donation", (string)null);
                });

            modelBuilder.Entity("AjudaFacil.Models.SchoolSupplieDonation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("VARCHAR(300)")
                        .HasColumnName("Description");

                    b.Property<int>("DonationId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("INT")
                        .HasColumnName("Weight");

                    b.HasKey("Id");

                    b.HasIndex("DonationId");

                    b.ToTable("SchoolSupplieDonation", (string)null);
                });

            modelBuilder.Entity("AjudaFacil.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adress")
                        .HasMaxLength(80)
                        .HasColumnType("VARCHAR(80)")
                        .HasColumnName("Adress");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("SMALLDATETIME")
                        .HasColumnName("BirthDate");

                    b.Property<string>("CNPJ")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("CNPJ");

                    b.Property<string>("CPF")
                        .HasMaxLength(15)
                        .HasColumnType("VARCHAR(15)")
                        .HasColumnName("CPF");

                    b.Property<int>("Cep")
                        .HasMaxLength(16)
                        .HasColumnType("INT")
                        .HasColumnName("Cep");

                    b.Property<string>("City")
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)")
                        .HasColumnName("City");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("VARCHAR(160)")
                        .HasColumnName("Email");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("LastName");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("Name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("Password");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("PhoneNumber");

                    b.Property<string>("ResidentialPhone")
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(10)")
                        .HasColumnName("ResidentialPhone");

                    b.Property<string>("Sex")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("Sex");

                    b.Property<int>("TotalDonations")
                        .HasMaxLength(1000)
                        .HasColumnType("INT")
                        .HasColumnName("TotalDonations");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("AjudaFacil.Models.ClothingDonation", b =>
                {
                    b.HasOne("AjudaFacil.Models.Donation", "Donations")
                        .WithMany("ClothingDonations")
                        .HasForeignKey("DonationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ClothingDonation_DonationId");

                    b.Navigation("Donations");
                });

            modelBuilder.Entity("AjudaFacil.Models.Donation", b =>
                {
                    b.HasOne("AjudaFacil.Models.User", "User")
                        .WithMany("Donations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Donation_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AjudaFacil.Models.SchoolSupplieDonation", b =>
                {
                    b.HasOne("AjudaFacil.Models.Donation", "Donations")
                        .WithMany("SchoolSupplieDonations")
                        .HasForeignKey("DonationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_SchoolSupplieDonation_DonationId");

                    b.Navigation("Donations");
                });

            modelBuilder.Entity("AjudaFacil.Models.Donation", b =>
                {
                    b.Navigation("ClothingDonations");

                    b.Navigation("SchoolSupplieDonations");
                });

            modelBuilder.Entity("AjudaFacil.Models.User", b =>
                {
                    b.Navigation("Donations");
                });
#pragma warning restore 612, 618
        }
    }
}
